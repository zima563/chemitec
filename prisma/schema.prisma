generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ProductType {
  BtoB
  BtoC
}

enum Role {
  user
  admin
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  role         Role     @default(user)
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Product {
  id            Int            @id @default(autoincrement())
  nameEn        String
  nameAr        String
  nameFr        String
  descriptionEn String?        @db.VarChar(1000)
  descriptionAr String?        @db.VarChar(1000)
  descriptionFr String?        @db.VarChar(1000)
  price         Float
  image         String? // cover image
  images        ProductImage[] // additional images
  type          ProductType
  brand         Brand?         @relation(fields: [brandId], references: [id])
  brandId       Int?
  industry      Industry?      @relation(fields: [industryId], references: [id])
  industryId    Int?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model LandingImage {
  id        Int      @id @default(autoincrement())
  url       String
  altEn     String?
  altAr     String?
  altFr     String?
  order     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id            Int       @id @default(autoincrement())
  nameEn        String
  nameAr        String
  nameFr        String
  descriptionEn String?   @db.VarChar(1000)
  descriptionAr String?   @db.VarChar(1000)
  descriptionFr String?   @db.VarChar(1000)
  logo          String?
  products      Product[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Industry {
  id            Int       @id @default(autoincrement())
  nameEn        String
  nameAr        String
  nameFr        String
  descriptionEn String?   @db.VarChar(1000)
  descriptionAr String?   @db.VarChar(1000)
  descriptionFr String?   @db.VarChar(1000)
  image         String?
  products      Product[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Certificate {
  id            Int      @id @default(autoincrement())
  nameEn        String
  nameAr        String
  nameFr        String
  descriptionEn String?  @db.VarChar(1000)
  descriptionAr String?  @db.VarChar(1000)
  descriptionFr String?  @db.VarChar(1000)
  image         String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model TeamMember {
  id         Int      @id @default(autoincrement())
  nameEn     String
  nameAr     String
  nameFr     String
  positionEn String
  positionAr String
  positionFr String
  bioEn      String?  @db.VarChar(200)
  bioAr      String?  @db.VarChar(200)
  bioFr      String?  @db.VarChar(200)
  image      String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ContactUs {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  subject   String   @db.VarChar(2000)
  phone     String?
  message   String
  createdAt DateTime @default(now())
}

model SuccessfulProduct {
  id            Int                      @id @default(autoincrement())
  titleEn       String
  titleAr       String
  titleFr       String
  descriptionEn Json
  descriptionAr Json
  descriptionFr Json
  image         String?
  images        SuccessfulProductImage[]
  createdAt     DateTime                 @default(now())
  updatedAt     DateTime                 @updatedAt
}

model SuccessfulProductImage {
  id                  Int               @id @default(autoincrement())
  url                 String
  successfulProduct   SuccessfulProduct @relation(fields: [successfulProductId], references: [id], onDelete: Cascade)
  successfulProductId Int
}
