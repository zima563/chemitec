// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  role         Role     @default(user) // لو عايز admin وغيره
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  price       Float
  image       String? // cover image
  images      ProductImage[] // additional images
  brand       Brand?         @relation(fields: [brandId], references: [id])
  brandId     Int?
  industry    Industry?      @relation(fields: [industryId], references: [id])
  industryId  Int?
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
}

model Brand {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  logo        String? // brand logo
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Industry {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  image       String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Certificate {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  image       String? // صورة الشهادة
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Role {
  user
  admin
}
